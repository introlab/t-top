<launch>
    <arg name="output_path"/>
    <arg name="dataset"/> <!-- coco or objects365 -->
    <arg name="image_count"/>
    <arg name="camera_type" default=""/> <!-- realsense, camera_2d_wide or "" -->

    <!-- Camera 3d -->
    <include if="$(eval arg('camera_type') == 'realsense')" file="$(find realsense2_camera)/launch/rs_aligned_depth.launch">
        <arg name="fisheye_width" value="1280"/>
        <arg name="fisheye_height" value="720"/>

        <arg name="depth_width" value="1280"/>
        <arg name="depth_height" value="720"/>

        <arg name="infra_width" value="1280"/>
        <arg name="infra_height" value="720"/>

        <arg name="color_width" value="1280"/>
        <arg name="color_height" value="720"/>

        <arg name="color_fps" value="15"/>
        <arg name="infra_fps" value="15"/>
        <arg name="depth_fps" value="15"/>

        <arg name="enable_gyro" value="false"/>
        <arg name="enable_accel" value="false"/>

        <arg name="camera" value="camera_3d"/>
    </include>

    <!-- Camera 2d Wide -->
    <node if="$(eval arg('camera_type') == 'camera_2d_wide')" pkg="cv_camera" type="cv_camera_node" name="cv_camera_node">
        <param name="rate" value="5"/>
        <param name="device_path" value="/dev/camera_2d_wide"/>
        <param name="image_width" value="1920"/>
        <param name="image_height" value="1080"/>
        <param name="camera_info_url" value="package://t_top/calibration/camera_2d_wide.yaml"/>

        <param name="cv_cap_prop_fourcc" value="1196444237"/> <!-- MJPG -->
        <param name="property_0_code" value="38"/> <!-- CAP_PROP_BUFFERSIZE -->
        <param name="property_0_value" value="1"/>

        <remap from="cv_camera_node/image_raw" to="camera_2d_wide_full_hd/image"/>
        <remap from="cv_camera_node/camera_info" to="camera_2d_wide_full_hd/camera_info"/>
        <remap from="cv_camera_node/set_camera_info" to="camera_2d_wide_full_hd/set_camera_info"/>
    </node>

    <node if="$(eval arg('camera_type') == 'camera_2d_wide')" pkg="nodelet" type="nodelet" args="manager" name="camera_2d_nodelet_manager"/>
    <node if="$(eval arg('camera_type') == 'camera_2d_wide')" pkg="nodelet" type="nodelet" args="load image_proc/resize camera_2d_nodelet_manager" name="camera_2d_resize">
        <param name="interpolation" value="1"/> <!-- Linear -->
        <param name="use_scale" value="false"/>
        <param name="width" value="1280"/>
        <param name="height" value="720"/>

        <remap from="image" to="camera_2d_wide_full_hd/image"/>
        <remap from="camera_info" to="camera_2d_wide_full_hd/camera_info"/>
        <remap from="~image" to="camera_2d_wide/image"/>
        <remap from="~camera_info" to="camera_2d_wide/camera_info"/>
    </node>
    <node if="$(eval arg('camera_type') == 'camera_2d_wide')" pkg="nodelet" type="nodelet" args="load image_proc/rectify camera_2d_nodelet_manager" name="camera_2d_rectify">
        <param name="interpolation" value="1"/> <!--Linear -->

        <remap from="image_mono" to="camera_2d_wide/image"/>
        <remap from="camera_info" to="camera_2d_wide/camera_info"/>
        <remap from="image_rect" to="camera_2d_wide/image_rect"/>
    </node>

    <!-- Camera 2d default -->
    <node if="$(eval arg('camera_type') != 'camera_2d_wide')" pkg="cv_camera" type="cv_camera_node" name="cv_camera_node">
        <param name="rate" value="5"/>
        <param name="device_path" value="/dev/video0"/>
        <param name="image_width" value="1920"/>
        <param name="image_height" value="1080"/>

        <param name="property_0_code" value="38"/> <!-- CAP_PROP_BUFFERSIZE -->
        <param name="property_0_value" value="1"/>

        <remap from="cv_camera_node/image_raw" to="image_raw"/>
    </node>

    <node pkg="yolo_performance" type="image_gathering_node.py" name="image_gathering_node" output="screen">
        <param name="output_path" value="$(arg output_path)"/>
        <param name="image_count" value="$(arg image_count)"/>

        <rosparam param="setups">
            [1m, 2m, 3m]
        </rosparam>

        <rosparam if="$(eval arg('dataset') == 'coco')" param="classes">
            [person, bowl, bottle]
        </rosparam>

        <rosparam if="$(eval arg('dataset') == 'objects365')" param="classes">
            [person, bowl, bottle, tong]
        </rosparam>

        <remap if="$(eval arg('camera_type') == 'realsense')" from="image_raw" to="camera_3d/color/image_raw"/>
        <remap if="$(eval arg('camera_type') == 'camera_2d_wide')" from="image_raw" to="camera_2d_wide/image_rect"/>
    </node>
</launch>
