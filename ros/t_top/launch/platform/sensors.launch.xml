<launch>

    <arg name="camera_2d_wide_enabled" default="false"/>
    <arg name="use_echo_cancellation" default="false"/>
    <arg name="pulse_audio_source"/>
    <arg name="pulse_audio_sink"/>
    <arg name="echo_cancellation_dest"/>
    <arg name="ec_volume_percent"/>
    <let if="$(var use_echo_cancellation)" name="audio_capture_device" value="$(var echo_cancellation_dest)_ec"/>
    <let unless="$(var use_echo_cancellation)" name="audio_capture_device" value="$(var pulse_audio_source)"/>

    <!-- Camera 3d -->
    <include file="$(find-pkg-share realsense2_camera)/launch/rs_launch.py">
        <arg name="depth_module.profile" value="1280x720x15" />
        <arg name="rgb_camera.profile" value="1280x720x15" />
        <arg name="enable_depth" value="true" />
        <arg name="enable_color" value="true" />
        <arg name="camera_namespace" value="camera_3d"/>
        <arg name="camera_name" value="camera_3d"/>
        <arg name="enable_sync" value="true"/>
        <arg name="align_depth.enable" value="true"/>
    </include>


    <!-- Camera 2d -->
    <node if="$(var camera_2d_wide_enabled)" pkg="cv_camera" exec="cv_camera_node" name="cv_camera_node" respawn="true">
        <param name="rate" value="5"/>
        <param name="device_path" value="/dev/camera_2d_wide"/>
        <param name="image_width" value="1920"/>
        <param name="image_height" value="1080"/>
        <param name="camera_info_url" value="file://$(env HOME)/.ros/t-top/calibration/camera_2d_wide_full_hd.yaml'"/>

        <param name="cv_cap_prop_fourcc" value="1196444237"/> <!-- MJPG -->
        <param name="property_0_code" value="38"/> <!-- CAP_PROP_BUFFERSIZE -->
        <param name="property_0_value" value="1"/>

        <remap from="cv_camera_node/image_raw" to="camera_2d_wide_full_hd/image"/>
        <remap from="cv_camera_node/camera_info" to="camera_2d_wide_full_hd/camera_info"/>
        <remap from="cv_camera_node/set_camera_info" to="camera_2d_wide_full_hd/set_camera_info"/>
    </node>
    <node if="$(var camera_2d_wide_enabled)" pkg="watchdog" exec="watchdog_node" name="cv_camera_watchdog_node" output="screen">
        <param name="node_name" value="cv_camera_node"/>
        <param name="topic" value="camera_2d_wide_full_hd/image"/>
        <param name="timeout_duration_s" value="5.0"/>
    </node>

    <node_container if="$(var camera_2d_wide_enabled)" pkg="rclcpp_components" exec="component_container" name="camera_2d_image_proc_container">
        <composable_node pkg="image_proc" plugin="image_proc::ResizeNode" name="camera_2d_resize">
            <param name="interpolation" value="1"/> <!-- Linear -->
            <param name="use_scale" value="false"/>
            <param name="width" value="1280"/>
            <param name="height" value="720"/>

            <remap from="image" to="camera_2d_wide_full_hd/image"/>
            <remap from="image/camera_info" to="camera_2d_wide_full_hd/camera_info"/>
            <remap from="resize" to="camera_2d_wide/image"/>
            <remap from="resize/camera_info" to="camera_2d_wide/camera_info"/>
        </composable_node>
        <composable_node pkg="image_proc" plugin="image_tools::RectifyNode" name="camera_2d_rectify">
            <param name="interpolation" value="1"/> <!--Linear -->

            <remap from="image" to="camera_2d_wide/image"/>
            <remap from="image/camera_info" to="camera_2d_wide/camera_info"/>
            <remap from="image_rect" to="camera_2d_wide/image_rect"/>
            <remap from="image_rect/camera_info" to="camera_2d_wide/image_rect/camera_info"/>
        </composable_node>
    </node_container>

    <!-- Sound -->
    <node if="$(var use_echo_cancellation)" pkg="odas_ros" exec="echocancel.sh" name="echocancel" args="$(var pulse_audio_source) $(var pulse_audio_sink) $(var echo_cancellation_dest) $(var ec_volume_percent)" />

    <node pkg="audio_utils" exec="capture_node" name="capture_node" output="screen" respawn="true">
        <param name="backend" value="pulse_audio"/>
        <param name="device" value="$(var audio_capture_device)"/>
        <param name="format" value="signed_32"/>
        <param name="channel_count" value="16"/>
        <param name="sampling_frequency" value="16000"/>
        <param name="frame_sample_count" value="1024"/>
        <param name="merge" value="false"/>
        <param name="gain" value="1.0"/>
        <param name="latency_us" value="64000"/>

        <remap from="audio_out" to="audio_input_before_ego_noise_signed_32_16000"/>

        <param name="channel_map" value="[front-left, front-right, rear-left, rear-right, front-center, lfe, side-left, side-right, aux0, aux1, aux2, aux3, aux4, aux5, aux6, aux7]"/>
    </node>
</launch>
